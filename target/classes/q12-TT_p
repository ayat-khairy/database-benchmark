PROFILE MATCH (:Year {value: 2016})–[:CHILD]->(:Month {value: 12})–[:CHILD]->(d:Day{value:1})–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance) where  s.sensorType STARTS WITH 'ELec'   AND  s.readingsLocation  IN ["GW", "GW32", "FW", "FW29" , "SW", "SW00"] return SUM( e.reading)
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance) where  s.sensorType STARTS WITH 'ELec'  with SUM(e.reading) as power, d.value as days MATCH(e2:Event)-[r:`has provenance`]->(s2:SensorReadingProvenance) where s2.sensorType STARTS WITH 'Temp' return power,  AVG (e2.reading) as Temp order by power DESC  limit 1
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where  s.sensorType="CO2"  with AVG(e.reading) as CO2, d.value as days MATCH(e2:Event)-[r:`has provenance`]->(s2:SensorReadingProvenance) where  s2.sensorType STARTS WITH 'ELec'  return CO2,  SUM (e2.reading) as ACCPower,  days order by CO2  DESC  limit 1
PROFILE MATCH (:Year {value: 2016})–[:CHILD]->(:Month {value: 12})–[:CHILD]->(d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where  s.sensorType  STARTS WITH 'ELec'   with SUM(e.reading) as power, d.value as days MATCH(e2:Event)-[r:`has provenance`]->(s2:SensorReadingProvenance)  where s2.sensorType STARTS WITH 'Temp'   return power,  AVG (e2.reading) as Temp order by power ASC  limit 1 
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where s.sensorType="CO2"  with AVG(e.reading) as CO2, d.value as days MATCH(e2:Event)-[r:`has provenance`]->(s2:SensorReadingProvenance)  where s2.sensorType STARTS WITH 'ELec'  return CO2,  SUM (e2.reading) as ACCPower order by CO2 ASC limit 1 
PROFILE MATCH (d:Day{value:1})–[:CHILD]->(h:Hour{value:8})<-[:NEXT*..8]-(hours:Hour)-[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where   s.sensorType STARTS WITH 'ELec'   return d.value, SUM( e.reading) as accReadingsPerD
PROFILE Match (e:SensorReading)-[r:`has provenance`]-> (S:SensorReadingProvenance) where   S.sensorType IN ["ELec-Sockets" , "ELec-Sockets and power"]   return S.readingsLocation, SUM( e.reading) as acc  order by   acc DESC limit 1
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where   s.sensorType="ELec-Lighting"    with  SUM (e.reading) as acc, s.readingsLocation as location, d.value as day return  location, avg(acc) as acc order by acc DESC limit 1
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where  s.sensorType  STARTS WITH 'Temp'  with AVG(e.reading) as AVGTemp, d.value as days where AVGTemp>25 MATCH(e2:Event)-[R  {type:"has provenance"}]->(s2:SensorReadingProvenance)  where  s2.sensorType="ELec-Lighting" return AVGTemp,  SUM (e2.reading) as Lightpower 
PROFILE MATCH (:Year {value: 2016})–[:CHILD]->(:Month)–[:CHILD]->(d:Day)–[:CHILD]->(h:Hour{value:7})<-[:NEXT*..5]-(hours:Hour)-[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where   s.sensorType STARTS WITH 'ELec' return s.readingsLocation, AVG( e.reading) as accReadings  order by  accReadings  DESC limit 1
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where  s.sensorType STARTS WITH 'ELec' with  SUM (e.reading) as acc, s.readingsLocation as location, d.value as day return  location, avg(acc) as acc order by acc ASC limit 1
PROFILE MATCH (d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[r:`has provenance`]->(s:SensorReadingProvenance)  where  s.sensorType STARTS WITH 'ELec'   with  SUM (e.reading) as acc, s.readingsLocation as location, d.value as day return distinct location, avg(acc) as acc order by acc DESC limit 1 
