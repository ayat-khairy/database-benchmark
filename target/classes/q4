Match (e:Event)-[R]-> (S:SensorReadingProvenance) where type(R)=~'has provenance.*' AND S.sensorType=~".*Sockets.*"  return S.readingsLocation, SUM( e.reading) as acc  order by   acc DESC limit 1
Match (:Year {value: 2016})–[:CHILD]->(:Month {value: 12})–[:CHILD]->(d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[R]-> (S:SensorReadingProvenance) where type(R)=~'has provenance.*'  AND  S.sensorType=~".*ELec.*" return S.readingsLocation, sum(e.reading) as sumR  order by   sumR DESC
MATCH (:Year {value: 2016})–[:CHILD]->(:Month {value: 12})–[:CHILD]->(d:Day)–[:CHILD]->(h:Hour)–[:CHILD]->(m:Minute)<- [:AT_TIME]-(e:Event)-[R]->(s:SensorReadingProvenance) where type(R)=~"has provenance"   AND  s.sensorType=~".*ELec.*" AND s.readingsLocation=~".*W.*" return SUM( e.reading)